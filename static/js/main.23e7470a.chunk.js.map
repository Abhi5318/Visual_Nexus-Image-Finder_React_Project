{"version":3,"sources":["components/NavBar.jsx","components/Breadcrumb.jsx","components/Image.jsx","components/Images.jsx","components/SnackBar.jsx","App.js","services/api.js","reportWebVitals.js","index.js"],"names":["Component","styled","AppBar","StyledToolbar","Toolbar","TitleContainer","StyledTypography","Typography","StyledIcon","CollectionsIcon","StyledH3","NavBar","_jsx","position","children","_jsxs","variant","style","marginLeft","Box","StyledInput","InputBase","StyledButton","Button","BreadCrumb","_ref","onTextChange","onCountChange","onSearch","m","onChange","e","target","value","placeholder","type","onClick","StyledImage","height","width","objectFit","Image","image","Card","src","largeImageURL","alt","user","StyledGridContainer","Grid","StyledGridItem","ImageWrapper","Images","data","container","map","item","id","MuiAlert","Alert","SnackBar","open","toggleSnack","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","App","setData","useState","text","setText","count","setCount","useEffect","async","axios","get","error","console","log","getImages","then","response","hits","getData","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"qPAGA,MAAMA,EAAYC,YAAOC,IAAO;;;;EAM1BC,EAAgBF,YAAOG,IAAQ;;;;EAM/BC,EAAiBJ,YAAO,MAAM;;;EAK9BK,EAAmBL,YAAOM,IAAW;;;;EAMrCC,EAAaP,YAAOQ,IAAgB;;;EAKpCC,EAAWT,YAAO,KAAK;;;;;;;;;;;;;;EAgCdU,MAhBAA,IAEXC,cAACZ,EAAS,CAACa,SAAS,SAAQC,SAC1BC,eAACZ,EAAa,CAAAW,SAAA,CACZC,eAACV,EAAc,CAAAS,SAAA,CACbF,cAACJ,EAAU,IACXI,cAACN,EAAgB,CAACU,QAAQ,KAAKC,MAAO,CAAEC,WAAY,IAAKJ,SAAC,oBAI5DF,cAACF,EAAQ,CAAAI,SAAC,2B,2BCvDlB,MAAMd,EAAYC,YAAOkB,IAAI;;;;;;;;;;;;;;;;EAkBvBC,EAAcnB,YAAOoB,IAAU;;;;;;;;;;;;;EAe/BC,EAAerB,YAAOsB,IAAO;;;;;;;;;;EA6BpBC,MAjBIC,IAAgD,IAA/C,aAAEC,EAAY,cAAEC,EAAa,SAAEC,GAAUH,EACzD,OACIV,eAACf,EAAS,CAAC6B,EAAG,EAAEf,SAAA,CACZF,cAACQ,EAAW,CACRU,SAAWC,GAAML,EAAaK,EAAEC,OAAOC,OACvCC,YAAY,kBAEhBtB,cAACQ,EAAW,CACRU,SAAWC,GAAMJ,EAAcI,EAAEC,OAAOC,OACxCC,YAAY,mBACZC,KAAK,WAETvB,cAACU,EAAY,CAACc,QAASR,EAASd,SAAC,aACzB,E,kBCzDpB,MAAMuB,EAAcpC,YAAO,MAAPA,CAAc,CAC1BqC,OAAQ,IACRC,MAAO,OACPC,UAAW,UAaJC,MATDhB,IAAgB,IAAf,MAAEiB,GAAOjB,EAEpB,OACIb,cAAC+B,IAAI,CAAA7B,SACDF,cAACyB,EAAW,CAACO,IAAKF,EAAMG,cAAeC,IAAKJ,EAAMK,QAC/C,ECZf,MAAMC,EAAsB/C,YAAOgD,IAAK;;;;;;;EASlCC,EAAiBjD,YAAOgD,IAAK;;;;;;;;;;EAY7BE,EAAelD,YAAO,MAAM;;;;;;;;;;;;;;;;;;;;EAoCnBmD,MAdA3B,IAAe,IAAd,KAAE4B,GAAM5B,EACtB,OACEb,cAACoC,EAAmB,CAACM,WAAS,EAAAxC,SAC3BuC,EAAKE,KAAKb,GACT9B,cAACsC,EAAc,CAAgBM,MAAI,EAAA1C,SACjCF,cAACuC,EAAY,CAAArC,SACXF,cAAC6B,EAAK,CAACC,MAAOA,OAFGA,EAAMe,OAMT,E,kBCrD1B,MAAMC,EAAWzD,YAAO0D,IAAM;;;EAyBfC,MApBEnC,IAA4B,IAA3B,KAAEoC,EAAI,YAAEC,GAAarC,EAEnC,MAAMsC,EAAcA,CAACC,EAAOC,KACT,cAAXA,GAGJH,GAAY,EAAM,EAGtB,OACIlD,cAACO,IAAG,CAAAL,SACAF,cAACsD,IAAQ,CAACL,KAAMA,EAAMM,iBAAkB,IAAMC,QAASL,EAAYjD,SAC/DF,cAAC8C,EAAQ,CAACW,SAAS,OAAOD,QAASL,EAAYjD,SAAC,oDAIlD,EC0BCwD,MAvCf,WACE,MAAOjB,EAAMkB,GAAWC,mBAAS,KAC1BC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAOC,GAAYJ,mBAAS,KAC5BX,EAAMC,GAAeU,oBAAS,GAyBrC,OAvBAK,qBAAU,KACR,GAAGF,EAAQ,GAAKA,EAAQ,IAEtB,YADAb,GAAY,GAGdA,GAAY,GAEIgB,gBCnBKA,OAAOL,EAAME,KAClC,IAEI,aADmBI,IAAMC,IAAI,sEAA4BP,+BAAkCE,oBAE/F,CAAC,MAAMM,GACHC,QAAQC,IAAIF,EAChB,GDcQG,CAAUX,EAAME,GAAOU,MAAKC,IAChCf,EAAQe,EAASjC,KAAKkC,KAAK,GAC3B,EAEJC,EAAS,GACR,CAACf,EAAME,IAWR5D,eAAA,OAAK0E,UAAU,MAAK3E,SAAA,CAClBF,cAACD,EAAM,IACPC,cAACY,EAAU,CAACE,aAXM+C,IACpBC,EAAQD,EAAK,EAU6B9C,cAPrBgD,IACrBC,EAASD,EAAM,IAOb/D,cAACwC,EAAM,CAACC,KAAMA,IACdzC,cAACgD,EAAQ,CAACC,KAAMA,EAAMC,YAAaA,MAGzC,EEpCe4B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBP,MAAK5D,IAAkD,IAAjD,OAAEoE,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASxE,EACpEoE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECHFO,IAASC,OACPvF,cAACwF,IAAMC,WAAU,CAAAvF,SACfF,cAAC0D,EAAG,MAENgC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.23e7470a.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography, styled } from '@mui/material';\nimport { Collections as CollectionsIcon } from '@mui/icons-material';\n\nconst Component = styled(AppBar)`\n  background: linear-gradient(135deg, #28313B 30%, #485461 90%);\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);\n  padding: 10px 0;\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TitleContainer = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledTypography = styled(Typography)`\n  font-weight: bold;\n  letter-spacing: 1.5px;\n  color: #ffffff;\n`;\n\nconst StyledIcon = styled(CollectionsIcon)`\n  color: #ffcc00;\n  font-size: 36px;\n`;\n\nconst StyledH3 = styled('h3')`\n  color: #ffcc00;\n  font-weight: 300;\n  font-size: 25px;\n  margin: 0;\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #ffffff;\n    cursor: pointer;\n  }\n`;\n\nconst NavBar = () => {\n  return (\n    <Component position=\"static\">\n      <StyledToolbar>\n        <TitleContainer>\n          <StyledIcon />\n          <StyledTypography variant=\"h5\" style={{ marginLeft: 10 }}>\n            Visual-Nexus\n          </StyledTypography>\n        </TitleContainer>\n        <StyledH3>By-Abhishek Singh</StyledH3>\n      </StyledToolbar>\n    </Component>\n  );\n};\n\nexport default NavBar;\n","import { Box, InputBase, Button, styled } from '@mui/material';\n\nconst Component = styled(Box)`\n    display: flex;\n    align-items: center;\n    background: #F6F6F6;\n    border-radius: 8px;\n    padding: 10px;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    transition: box-shadow 0.3s ease;\n\n    &:hover {\n        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);\n    }\n\n    & > div {\n        margin-right: 10px;\n    }\n`;\n\nconst StyledInput = styled(InputBase)`\n    flex: 1;\n    background: white;\n    border-radius: 30px;\n    padding: 8px;\n    border: 1px solid #D1D1D1;\n    transition: border 0.3s ease, box-shadow 0.3s ease;\n\n    &:focus {\n        border-color: #445A6F;\n        box-shadow: 0 0 5px rgba(68, 90, 111, 0.5);\n        outline: none;\n    }\n`;\n\nconst StyledButton = styled(Button)`\n    background: #445A6F;\n    color: white;\n    padding: 8px 16px;\n    border-radius: 30px;\n    transition: background 0.3s ease;\n\n    &:hover {\n        background: red;\n    }\n`;\n\nconst BreadCrumb = ({ onTextChange, onCountChange, onSearch }) => {\n    return (\n        <Component m={1}>\n            <StyledInput\n                onChange={(e) => onTextChange(e.target.value)}\n                placeholder=\"Search images\"\n            />\n            <StyledInput\n                onChange={(e) => onCountChange(e.target.value)}\n                placeholder=\"Number of images\"\n                type=\"number\"\n            />\n            <StyledButton onClick={onSearch}>Search</StyledButton>\n        </Component>\n    );\n};\n\nexport default BreadCrumb;\n","\nimport { Card, styled } from '@mui/material';\n\nconst StyledImage = styled('img')({\n        height: 300,\n        width: '100%',\n        objectFit: 'cover'\n    }\n);\n\nconst Image = ({ image }) => {\n    \n    return (\n        <Card>\n            <StyledImage src={image.largeImageURL} alt={image.user} />\n        </Card>\n    )\n}\n\nexport default Image;","import { Grid, styled } from '@mui/material';\nimport Image from './Image';\n\nconst StyledGridContainer = styled(Grid)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n  margin: 0;\n`;\n\nconst StyledGridItem = styled(Grid)`\n  padding: 10px;\n\n  @media (min-width: 600px) {\n    width: 48%;\n  }\n\n  @media (min-width: 900px) {\n    width: 23%;\n  }\n`;\n\nconst ImageWrapper = styled('div')`\n  overflow: hidden;\n  border-radius: 12px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  transition: transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1) rotate(3deg);\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n    filter: brightness(1.1) saturate(1.2);\n  }\n\n  img {\n    transition: transform 0.4s ease-in-out, filter 0.4s ease-in-out;\n  }\n\n  &:hover img {\n    transform: scale(1.05);\n    filter: grayscale(0.3);\n  }\n`;\n\nconst Images = ({ data }) => {\n  return (\n    <StyledGridContainer container>\n      {data.map((image) => (\n        <StyledGridItem key={image.id} item>\n          <ImageWrapper>\n            <Image image={image} />\n          </ImageWrapper>\n        </StyledGridItem>\n      ))}\n    </StyledGridContainer>\n  );\n};\n\nexport default Images;\n","\nimport { Box, Snackbar, Alert, styled } from '@mui/material';\n\nconst MuiAlert = styled(Alert)`\n    color: #fff;\n    background-color: #000000;\n`;\n\nconst SnackBar = ({ open, toggleSnack }) => {\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        toggleSnack(false);\n    };\n\n    return (\n        <Box>\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n                <MuiAlert severity=\"info\" onClose={handleClose}>\n                    Number of Images should be between 3 and 200\n                </MuiAlert>\n            </Snackbar>\n        </Box>\n    )\n}\n\nexport default SnackBar;","import { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport { getImages } from './services/api';\n\nimport NavBar from './components/NavBar.jsx';\nimport BreadCrumb from './components/Breadcrumb';\nimport Images from './components/Images';\nimport SnackBar from './components/SnackBar';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [text, setText] = useState('cars');\n  const [count, setCount] = useState(10);\n  const [open, toggleSnack] = useState(false);\n\n  useEffect(() => {\n    if(count < 3 || count > 200){\n      toggleSnack(true);\n      return;\n    }\n    toggleSnack(false);\n\n    const getData = async () => {\n      await getImages(text, count).then(response => {\n        setData(response.data.hits);\n      }); \n    }\n    getData();\n  }, [text, count])\n  \n  const onTextChange = (text) => {\n    setText(text);\n  }\n\n  const onCountChange = (count) => {\n    setCount(count);\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <BreadCrumb onTextChange={onTextChange} onCountChange={onCountChange}/>\n      <Images data={data}/>\n      <SnackBar open={open} toggleSnack={toggleSnack} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\n\nconst URL = 'https://pixabay.com/api/';\nconst API_KEY = '20259577-c93c75abc878a636931b34317';\n\nexport const getImages = async (text, count) => {\n    try{\n        const data = await axios.get(`${URL}/?key=${API_KEY}&q=${text}&image_type=photo&per_page=${count}&safesearch=true`)\n        return data;\n    }catch(error){\n        console.log(error)\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}